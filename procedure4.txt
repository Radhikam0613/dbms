-- connect to Oracle schema; then:

-- Account table
DROP TABLE Account PURGE;
CREATE TABLE Account (
  Account_No NUMBER PRIMARY KEY,
  Cust_ID NUMBER,
  Balance NUMBER(12,2),
  DoJ DATE
);

-- Earned_Interest table
DROP TABLE Earned_Interest PURGE;
CREATE TABLE Earned_Interest (
  Entry_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  Account_No NUMBER,
  Interest_Amt NUMBER(12,2),
  Calculated_On DATE DEFAULT SYSDATE
);

-- sample data
INSERT INTO Account(Account_No, Cust_ID, Balance, DoJ) VALUES (1001, 1, 50000, DATE '2018-01-01');
INSERT INTO Account(Account_No, Cust_ID, Balance, DoJ) VALUES (1002, 2, 20000, DATE '2020-06-15');
COMMIT;

-- Procedure: compute simple interest and insert
CREATE OR REPLACE PROCEDURE add_interest(p_acct IN NUMBER, p_rate IN NUMBER) IS
  v_balance NUMBER;
  v_interest NUMBER;
BEGIN
  SELECT Balance INTO v_balance FROM Account WHERE Account_No = p_acct;
  v_interest := v_balance * p_rate/100;
  INSERT INTO Earned_Interest(Account_No, Interest_Amt) VALUES(p_acct, v_interest);
  COMMIT;
END add_interest;
/

-- Test
BEGIN
  add_interest(1001, 5); -- 5% interest
END;
/
SELECT * FROM Earned_Interest;

-- Function: return SYS_REFCURSOR for accounts with balance > 50000
CREATE OR REPLACE FUNCTION get_high_bal RETURN SYS_REFCURSOR IS
  rc SYS_REFCURSOR;
BEGIN
  OPEN rc FOR SELECT * FROM Account WHERE Balance > 50000;
  RETURN rc;
END get_high_bal;
/

-- Test function in PL/SQL block
SET SERVEROUTPUT ON
DECLARE
  c SYS_REFCURSOR;
  a_account Account%ROWTYPE;
BEGIN
  c := get_high_bal();
  LOOP
    FETCH c INTO a_account;
    EXIT WHEN c%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE('Acct: '||a_account.Account_No||' Bal: '||a_account.Balance);
  END LOOP;
  CLOSE c;
END;
/
