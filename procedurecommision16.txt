-- Using previously created Employee, Manager, Departments tables

-- 1 commission procedure
CREATE OR REPLACE PROCEDURE set_commission IS
BEGIN
  FOR r IN (SELECT emp_id, salary, TRUNC(MONTHS_BETWEEN(SYSDATE, DoJ)/12) AS exp FROM Employee) LOOP
    UPDATE Employee
    SET salary = salary -- keep salary, we will store commission in a column if exists
    WHERE emp_id = r.emp_id;
    -- simple example: store commission in a new table or column
    BEGIN
      INSERT INTO Earned_Interest(Account_No, Interest_Amt)
      VALUES (r.emp_id, CASE
        WHEN r.salary > 10000 THEN r.salary * 0.004
        WHEN r.salary < 10000 AND r.exp > 10 THEN r.salary * 0.0035
        WHEN r.salary < 3000 THEN r.salary * 0.0025
        ELSE r.salary * 0.0015
      END);
    EXCEPTION WHEN OTHERS THEN NULL;
    END;
  END LOOP;
  COMMIT;
END;
/
-- Note: above reuses Earned_Interest table as a simple store for commissions for demo.

-- 2 function get manager name by dept id
CREATE OR REPLACE FUNCTION get_manager_name(p_dept_id NUMBER) RETURN VARCHAR2 IS
  v_mgr_name VARCHAR2(100);
BEGIN
  SELECT m.manager_name INTO v_mgr_name
  FROM Manager m JOIN Departments d ON m.manager_id = d.manager_id
  WHERE d.department_id = p_dept_id;
  RETURN v_mgr_name;
EXCEPTION WHEN NO_DATA_FOUND THEN RETURN NULL;
END;
/

-- Test function
SET SERVEROUTPUT ON
DECLARE
  nm VARCHAR2(100);
BEGIN
  nm := get_manager_name(1);
  DBMS_OUTPUT.PUT_LINE('Manager: '||NVL(nm,'Not found'));
END;
/
